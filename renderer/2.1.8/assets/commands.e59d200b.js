import{g as m,C as n,t as a,h as g,c as P,P as y,b as I,w as A,o as h,d as L,e as w,f as b}from"./compositor.3ae8468b.js";const{state:j}=n,R=async c=>{const t=m();if(!t)return;const e={...t.props,...c.props},o=await n.clients.LiveApi().collection.updateCollection({collectionId:t.id,updateMask:["metadata"],metadata:{...t.metadata,props:e}});await a("UserChanged",o.collection)},S=async c=>{const t=m().id,{source:e}=await n.clients.LiveApi().source.createSource({metadata:{},collectionId:t,address:{rtmpPush:{enabled:!0}},preview:{webrtc:{enabled:!0,displayName:c.displayName||"RTMP Source"}}});await a("SourceAdded",e);const o=await n.clients.LiveApi().source.addSourceToProject({collectionId:t,projectId:c.projectId,sourceId:e.sourceId});return await a("ProjectSourceAdded",{projectId:o.project.projectId,source:e}),e},f=async c=>{const t=m().id;let e=[],o={};c.metadata&&(e.push("metadata"),o.metadata=c.metadata),c.displayName&&(e.push("preview.webrtc.displayName"),o={...o,preview:{webrtc:{displayName:c.displayName}}});const{source:i}=await n.clients.LiveApi().source.updateSource({collectionId:t,updateMask:e,sourceId:c.sourceId,...o});return await a("SourceChanged",i),i},k=async c=>{const t=m().id;await n.clients.LiveApi().source.removeSourceFromProject({collectionId:t,projectId:c.projectId,sourceId:c.sourceId}),await a("ProjectSourceRemoved",{projectId:c.projectId,sourceId:c.sourceId});const e=await n.clients.LiveApi().source.deleteSource({sourceId:c.sourceId,collectionId:t});return await a("SourceRemoved",c.sourceId),e},T=async(c={})=>{const{props:t={},size:e,settings:o={}}=c,i=await n.Request.createProject({settings:o,props:t,size:e});await a("ProjectAdded",i.project);const r=await g(i.project,"ROLE_HOST");return P(r)},M=async c=>{const{projectId:t,props:e={}}=c,o=m().id,i=await n.clients.LiveApi().project.getProject({collectionId:o,projectId:t,status:!0});if([y.PROJECT_BROADCAST_PHASE_RUNNING,y.PROJECT_BROADCAST_PHASE_STARTING].includes(i.status.phase))return;const r=i.project.metadata||{},{layoutId:s}=r,{video:d}=i.project.rendering,{type:p}=i.project.metadata.props||{},u=await n.Request.createLayout({collectionId:o,projectId:t,type:p||"sceneless",settings:{},size:{x:d.width,y:d.height}}),l=await n.clients.LiveApi().project.updateProject({collectionId:o,projectId:t,updateMask:["metadata"],metadata:{...r,layoutId:u.id}});n.log.debug("New layout assigned to project:",{layout:u}),await a("ProjectChanged",{project:l.project}),await n.clients.LayoutApi().layout.deleteLayout({layoutId:s}),n.log.debug("Previous layout deleted:",{layoutId:s});const v=await g(l.project,"ROLE_HOST");return await v.compositor.update(v.compositor.getRoot().id,e),{project:P(v),internalProject:v}},B=async c=>{const{projectId:t}=c;await n.Request.deleteProject({projectId:t}),await a("ProjectRemoved",{projectId:t})},D=async c=>{const{projectId:t}=c,e=m().id,o=I(t),i={...o.props,...c.props},r=await n.clients.LiveApi().project.updateProject({collectionId:e,projectId:t,updateMask:["metadata"],metadata:{...o.videoApi.project.metadata,props:i}});await a("ProjectChanged",{project:r.project})},U=c=>D({projectId:c.projectId,props:c.meta}),E=async c=>{const{projectId:t}=c,e=m().id,o=I(t),i={...o.props,...c.props};await n.clients.LiveApi().project.updateProject({collectionId:e,projectId:t,updateMask:["metadata"],metadata:{...o.videoApi.project.metadata,props:i}})},O=async c=>{const t=j.projects.find(o=>o.id===c.projectId);if(!t){j.activeProjectId=null,a("ActiveProjectChanged",{projectId:null});return}const e=j.projects.find(o=>o.id===j.activeProjectId);if(t!==e)return e&&(Array.from(A.rooms.keys()).map(A.removeRoom),await n.clients.LayoutApi().unsubscribeFromLayout(e.layoutApi.layoutId),await n.clients.LiveApi().unsubscribeFromProject(e.videoApi.project.collectionId,e.videoApi.project.projectId)),await n.clients.LayoutApi().subscribeToLayout(t.layoutApi.layoutId),await n.clients.LiveApi().subscribeToProject(t.videoApi.project.collectionId,t.videoApi.project.projectId),n.clients.LiveApi().project.getProject({collectionId:t.videoApi.project.collectionId,projectId:t.videoApi.project.projectId,status:!0}).then(o=>{var i,r;a("ProjectChanged",{project:o.project,phase:(i=o.status)==null?void 0:i.phase,broadcastId:(r=o.status)==null?void 0:r.broadcastId})}),a("ActiveProjectChanged",{projectId:t.id}),P(t)},_=async c=>{const{projectId:t,displayName:e="Guest"}=c,o=j.projects.find(v=>v.id===t);let i=o.sfuToken;if(!i){let{webrtcAccess:v}=await n.clients.LiveApi().authentication.createWebRtcAccessToken({collectionId:o.videoApi.project.collectionId,projectId:o.videoApi.project.projectId,displayName:e});i=v.accessToken}const s=h(i).video.room,d=new URL(n.clients.getLiveKitServer()),p=d.host+d.pathname,u=A.ensureRoom(p,s,i);u.bindApiClient(n.clients),await u.connect(),o.sfuToken=i,o.roomId=s;const l=L(s);return w("RoomJoined",{projectId:o.id,room:l}),l},x=async c=>{let{props:t={},parentId:e,index:o,projectId:i=j.activeProjectId}=c;const r=I(i),s=await r.compositor.insert(t,e,o);return a("NodeAdded",{projectId:i,nodeId:s}),a("NodeChanged",{projectId:i,nodeId:e}),r.compositor.get(s)},H=async c=>{var r;let{nodeId:t,projectId:e=j.activeProjectId}=c;const o=I(e),i=(r=o.compositor.getParent(t))==null?void 0:r.id;o.compositor.remove(t),a("NodeRemoved",{projectId:e,nodeId:t}),a("NodeChanged",{projectId:e,nodeId:i})},K=async c=>{let{nodeId:t,props:e={},projectId:o=j.activeProjectId}=c;const i=I(o);return delete e.type,delete e.sourceType,i.compositor.update(t,e),a("NodeChanged",{projectId:o,nodeId:t}),i.compositor.get(t)},q=async c=>{let{nodeId:t,layout:e,projectId:o=j.activeProjectId,layoutProps:i={}}=c;I(o).compositor.update(t,{layout:e,layoutProps:i}),a("NodeChanged",{projectId:o,nodeId:t})},F=async c=>{const{nodeId:t,parentId:e,projectId:o=j.activeProjectId,index:i}=c;I(o).compositor.move(t,e,i),a("NodeChanged",{projectId:o,nodeId:t})},G=async c=>{var d,p;const{nodeAId:t,nodeBId:e,projectId:o=j.activeProjectId}=c,i=I(o),r=(d=i.compositor.getParent(t))==null?void 0:d.id,s=(p=i.compositor.getParent(e))==null?void 0:p.id;i.compositor.swap(t,e),a("NodeChanged",{projectId:o,nodeId:r}),a("NodeChanged",{projectId:o,nodeId:s})},J=async c=>{const{parentId:t,childIds:e,projectId:o=j.activeProjectId}=c;I(o).compositor.reorder(t,e),a("NodeChanged",{projectId:o,nodeId:t})},z=async c=>{const{projectId:t=j.activeProjectId}=c,e=I(t);await n.clients.LiveApi().project.startProjectBroadcast({collectionId:e.videoApi.project.collectionId,projectId:e.videoApi.project.projectId})},W=async c=>{const{projectId:t=j.activeProjectId}=c,e=I(t);await n.clients.LiveApi().project.stopProjectBroadcast({collectionId:e.videoApi.project.collectionId,projectId:e.videoApi.project.projectId})},Q=async c=>{var l;const{rtmpUrl:t,rtmpKey:e,enabled:o,projectId:i=j.activeProjectId,metadata:r={},props:s={}}=c,d=I(i),p={rtmpPush:{key:e,url:t}},u=await((l=n.clients.LiveApi().destination)==null?void 0:l.createDestination({collectionId:d.videoApi.project.collectionId,projectId:d.videoApi.project.projectId,address:p,enabled:o,metadata:{props:{...r,...s}}}));return await a("DestinationAdded",u.destination),b(u.destination)},V=async c=>{var i;const{destinationId:t,projectId:e=j.activeProjectId}=c,o=I(e);await((i=n.clients.LiveApi().destination)==null?void 0:i.deleteDestination({collectionId:o.videoApi.project.collectionId,projectId:o.videoApi.project.projectId,destinationId:t})),await a("DestinationRemoved",{projectId:e,destinationId:t})},X=async c=>{var p;const{rtmpUrl:t,rtmpKey:e,destinationId:o,projectId:i=j.activeProjectId}=c,r=I(i),s={key:e,url:t},d=await((p=n.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:r.videoApi.project.collectionId,projectId:r.videoApi.project.projectId,destinationId:o,updateMask:["address.rtmpPush"],address:{rtmpPush:s}}));await a("DestinationChanged",d.destination)},N=async c=>{var d,p;const{projectId:t=j.activeProjectId,destinationId:e,props:o={}}=c,i=I(t),r=i.videoApi.project.destinations.find(u=>u.destinationId===e);if(!r)return;const s=await((p=n.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,destinationId:e,updateMask:["metadata"],metadata:{...r.metadata||{},props:{...((d=r.metadata)==null?void 0:d.props)||{},...o}}}));await a("DestinationChanged",s.destination)},Y=c=>N({projectId:c.projectId,destinationId:c.destinationId,props:c.metadata}),Z=async c=>{var p;const{enabled:t,destinationId:e,projectId:o=j.activeProjectId}=c,i=I(o);if(i.videoApi.project.destinations.find(u=>e===u.destinationId).enabled===t)return;const s=await((p=n.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,destinationId:e,updateMask:["enabled"],enabled:t}));await a("DestinationChanged",s.destination),w(t?"DestinationEnabled":"DestinationDisabled",{projectId:o,destinationId:e})},$=async c=>{var d,p;const{rtmpUrl:t,rtmpKey:e,projectId:o=j.activeProjectId}=c,i=I(o),r={key:e,url:t},s=!0;if(i.videoApi.project.destinations.length>0){const u=await((d=n.clients.LiveApi().destination)==null?void 0:d.updateDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,destinationId:i.videoApi.project.destinations[0].destinationId,updateMask:["address.rtmpPush"],address:{rtmpPush:r}}));await a("DestinationChanged",u.destination)}else{const u=await((p=n.clients.LiveApi().destination)==null?void 0:p.createDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,address:{rtmpPush:r},enabled:s}));await a("DestinationAdded",u.destination)}w("DestinationSet",{projectId:o,rtmpUrl:t,rtmpKey:e})};export{Q as addDestination,x as createNode,T as createProject,S as createSource,H as deleteNode,B as deleteProject,k as deleteSource,_ as joinRoom,F as moveNode,M as recreateLayout,V as removeDestination,J as reorderNodes,O as setActiveProject,$ as setDestination,Z as setDestinationEnabled,q as setNodeLayout,z as startBroadcast,W as stopBroadcast,G as swapNodes,X as updateDestination,Y as updateDestinationMeta,N as updateDestinationProps,K as updateNode,U as updateProjectMeta,D as updateProjectProps,E as updateProjectPropsWithoutTrigger,f as updateSource,R as updateUserProps};
//# sourceMappingURL=commands.e59d200b.js.map
