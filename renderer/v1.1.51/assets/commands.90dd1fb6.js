import{g as m,C as a,t as s,h as w,c as P,P as g,b as l,w as A,o as h,d as L,e as y,f as D}from"./compositor.0e22ba14.js";const{state:j}=a,R=async n=>{const t=m();if(!t)return;const o={...t.props,...n.props},e=await a.clients.LiveApi().collection.updateCollection({collectionId:t.id,updateMask:["metadata"],metadata:{...t.metadata,props:o}});await s("UserChanged",e.collection)},f=async(n={})=>{const{props:t={},size:o,settings:e={}}=n,c=await a.Request.createProject({settings:e,props:t,size:o});await s("ProjectAdded",c.project);const i=await w(c.project,"ROLE_HOST");return P(i)},k=async n=>{const{projectId:t,props:o={}}=n,e=m().id,c=await a.clients.LiveApi().project.getProject({collectionId:e,projectId:t,status:!0});if([g.PROJECT_BROADCAST_PHASE_RUNNING,g.PROJECT_BROADCAST_PHASE_STARTING].includes(c.status.phase))return;const i=c.project.metadata||{},{layoutId:r}=i,{video:d}=c.project.rendering,{type:p}=c.project.metadata.props||{},I=await a.Request.createLayout({collectionId:e,projectId:t,type:p||"sceneless",settings:{},size:{x:d.width,y:d.height}}),u=await a.clients.LiveApi().project.updateProject({collectionId:e,projectId:t,updateMask:["metadata"],metadata:{...i,layoutId:I.id}});a.log.debug("New layout assigned to project:",{layout:I}),await s("ProjectChanged",{project:u.project}),await a.clients.LayoutApi().layout.deleteLayout({layoutId:r}),a.log.debug("Previous layout deleted:",{layoutId:r});const v=await w(u.project,"ROLE_HOST");return await v.compositor.update(v.compositor.getRoot().id,o),P(v)},T=async n=>{const{projectId:t}=n;await a.Request.deleteProject({projectId:t}),await s("ProjectRemoved",{projectId:t})},C=async n=>{const{projectId:t}=n,o=m().id,e=l(t),c={...e.props,...n.props},i=await a.clients.LiveApi().project.updateProject({collectionId:o,projectId:t,updateMask:["metadata"],metadata:{...e.videoApi.project.metadata,props:c}});await s("ProjectChanged",{project:i.project})},B=n=>C({projectId:n.projectId,props:n.meta}),M=async n=>{const{projectId:t}=n,o=m().id,e=l(t),c={...e.props,...n.props};await a.clients.LiveApi().project.updateProject({collectionId:o,projectId:t,updateMask:["metadata"],metadata:{...e.videoApi.project.metadata,props:c}})},S=async n=>{const t=j.projects.find(e=>e.id===n.projectId);if(!t){j.activeProjectId=null,s("ActiveProjectChanged",{projectId:null});return}const o=j.projects.find(e=>e.id===j.activeProjectId);if(t!==o)return o&&(Array.from(A.rooms.keys()).map(A.removeRoom),await a.clients.LayoutApi().unsubscribeFromLayout(o.layoutApi.layoutId),await a.clients.LiveApi().unsubscribeFromProject(o.videoApi.project.collectionId,o.videoApi.project.projectId)),await a.clients.LayoutApi().subscribeToLayout(t.layoutApi.layoutId),await a.clients.LiveApi().subscribeToProject(t.videoApi.project.collectionId,t.videoApi.project.projectId),a.clients.LiveApi().project.getProject({collectionId:t.videoApi.project.collectionId,projectId:t.videoApi.project.projectId,status:!0}).then(e=>{var c,i;s("ProjectChanged",{project:e.project,phase:(c=e.status)==null?void 0:c.phase,broadcastId:(i=e.status)==null?void 0:i.broadcastId})}),s("ActiveProjectChanged",{projectId:t.id}),P(t)},U=async n=>{const{projectId:t,displayName:o="Guest"}=n,e=j.projects.find(v=>v.id===t);let c=e.sfuToken;if(!c){let{webrtcAccess:v}=await a.clients.LiveApi().authentication.createWebRtcAccessToken({collectionId:e.videoApi.project.collectionId,projectId:e.videoApi.project.projectId,displayName:o});c=v.accessToken}const r=h(c).video.room,d=new URL(a.clients.getLiveKitServer()),p=d.host+d.pathname,I=A.ensureRoom(p,r,c);I.bindApiClient(a.clients),await I.connect(),e.sfuToken=c,e.roomId=r;const u=L(r);return y("RoomJoined",{projectId:e.id,room:u}),u},E=async n=>{let{props:t={},parentId:o,index:e,projectId:c=j.activeProjectId}=n;const i=l(c),r=await i.compositor.insert(t,o,e);return s("NodeAdded",{projectId:c,nodeId:r}),s("NodeChanged",{projectId:c,nodeId:o}),i.compositor.get(r)},O=async n=>{var i;let{nodeId:t,projectId:o=j.activeProjectId}=n;const e=l(o),c=(i=e.compositor.getParent(t))==null?void 0:i.id;e.compositor.remove(t),s("NodeRemoved",{projectId:o,nodeId:t}),s("NodeChanged",{projectId:o,nodeId:c})},_=async n=>{let{nodeId:t,props:o={},projectId:e=j.activeProjectId}=n;const c=l(e);return delete o.type,delete o.sourceType,c.compositor.update(t,o),s("NodeChanged",{projectId:e,nodeId:t}),c.compositor.get(t)},x=async n=>{let{nodeId:t,layout:o,projectId:e=j.activeProjectId,layoutProps:c={}}=n;l(e).compositor.update(t,{layout:o,layoutProps:c}),s("NodeChanged",{projectId:e,nodeId:t})},H=async n=>{const{nodeId:t,parentId:o,projectId:e=j.activeProjectId,index:c}=n;l(e).compositor.move(t,o,c),s("NodeChanged",{projectId:e,nodeId:t})},K=async n=>{var d,p;const{nodeAId:t,nodeBId:o,projectId:e=j.activeProjectId}=n,c=l(e),i=(d=c.compositor.getParent(t))==null?void 0:d.id,r=(p=c.compositor.getParent(o))==null?void 0:p.id;c.compositor.swap(t,o),s("NodeChanged",{projectId:e,nodeId:i}),s("NodeChanged",{projectId:e,nodeId:r})},q=async n=>{const{parentId:t,childIds:o,projectId:e=j.activeProjectId}=n;l(e).compositor.reorder(t,o),s("NodeChanged",{projectId:e,nodeId:t})},G=async n=>{const{projectId:t=j.activeProjectId}=n,o=l(t);await a.clients.LiveApi().project.startProjectBroadcast({collectionId:o.videoApi.project.collectionId,projectId:o.videoApi.project.projectId})},J=async n=>{const{projectId:t=j.activeProjectId}=n,o=l(t);await a.clients.LiveApi().project.stopProjectBroadcast({collectionId:o.videoApi.project.collectionId,projectId:o.videoApi.project.projectId})},z=async n=>{var u;const{rtmpUrl:t,rtmpKey:o,enabled:e,projectId:c=j.activeProjectId,metadata:i={},props:r={}}=n,d=l(c),p={rtmpPush:{key:o,url:t}},I=await((u=a.clients.LiveApi().destination)==null?void 0:u.createDestination({collectionId:d.videoApi.project.collectionId,projectId:d.videoApi.project.projectId,address:p,enabled:e,metadata:{props:{...i,...r}}}));return await s("DestinationAdded",I.destination),D(I.destination)},F=async n=>{var c;const{destinationId:t,projectId:o=j.activeProjectId}=n,e=l(o);await((c=a.clients.LiveApi().destination)==null?void 0:c.deleteDestination({collectionId:e.videoApi.project.collectionId,projectId:e.videoApi.project.projectId,destinationId:t})),await s("DestinationRemoved",{projectId:o,destinationId:t})},W=async n=>{var p;const{rtmpUrl:t,rtmpKey:o,destinationId:e,projectId:c=j.activeProjectId}=n,i=l(c),r={key:o,url:t},d=await((p=a.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,destinationId:e,updateMask:["address.rtmpPush"],address:{rtmpPush:r}}));await s("DestinationChanged",d.destination)},b=async n=>{var d,p;const{projectId:t=j.activeProjectId,destinationId:o,props:e={}}=n,c=l(t),i=c.videoApi.project.destinations.find(I=>I.destinationId===o);if(!i)return;const r=await((p=a.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:c.videoApi.project.collectionId,projectId:c.videoApi.project.projectId,destinationId:o,updateMask:["metadata"],metadata:{...i.metadata||{},props:{...((d=i.metadata)==null?void 0:d.props)||{},...e}}}));await s("DestinationChanged",r.destination)},Q=n=>b({projectId:n.projectId,destinationId:n.destinationId,props:n.metadata}),V=async n=>{var p;const{enabled:t,destinationId:o,projectId:e=j.activeProjectId}=n,c=l(e);if(c.videoApi.project.destinations.find(I=>o===I.destinationId).enabled===t)return;const r=await((p=a.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:c.videoApi.project.collectionId,projectId:c.videoApi.project.projectId,destinationId:o,updateMask:["enabled"],enabled:t}));await s("DestinationChanged",r.destination),y(t?"DestinationEnabled":"DestinationDisabled",{projectId:e,destinationId:o})},X=async n=>{var d,p;const{rtmpUrl:t,rtmpKey:o,projectId:e=j.activeProjectId}=n,c=l(e),i={key:o,url:t},r=!0;if(c.videoApi.project.destinations.length>0){const I=await((d=a.clients.LiveApi().destination)==null?void 0:d.updateDestination({collectionId:c.videoApi.project.collectionId,projectId:c.videoApi.project.projectId,destinationId:c.videoApi.project.destinations[0].destinationId,updateMask:["address.rtmpPush"],address:{rtmpPush:i}}));await s("DestinationChanged",I.destination)}else{const I=await((p=a.clients.LiveApi().destination)==null?void 0:p.createDestination({collectionId:c.videoApi.project.collectionId,projectId:c.videoApi.project.projectId,address:{rtmpPush:i},enabled:r}));await s("DestinationAdded",I.destination)}y("DestinationSet",{projectId:e,rtmpUrl:t,rtmpKey:o})};export{z as addDestination,E as createNode,f as createProject,O as deleteNode,T as deleteProject,U as joinRoom,H as moveNode,k as recreateLayout,F as removeDestination,q as reorderNodes,S as setActiveProject,X as setDestination,V as setDestinationEnabled,x as setNodeLayout,G as startBroadcast,J as stopBroadcast,K as swapNodes,W as updateDestination,Q as updateDestinationMeta,b as updateDestinationProps,_ as updateNode,B as updateProjectMeta,C as updateProjectProps,M as updateProjectPropsWithoutTrigger,R as updateUserProps};
//# sourceMappingURL=commands.90dd1fb6.js.map
