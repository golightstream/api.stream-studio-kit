import{g as v,C as r,t as s,h as g,c as P,P as w,b as l,w as m,j as y,d as h,e as L,f as b}from"./compositor-CUUK24vC.js";const{state:j}=r,N=async c=>{const e=v();if(!e)return;const t={...e.props,...c.props},o=await r.clients.LiveApi().collection.updateCollection({collectionId:e.id,updateMask:["metadata"],metadata:{...e.metadata,props:t}});await s("UserChanged",o.collection)},R=async c=>{const e=v().id,{source:t}=await r.clients.LiveApi().source.createSource({metadata:{props:c.props||{}},collectionId:e,address:c.address,preview:{webrtc:{enabled:!0,displayName:c.displayName||"RTMP Source"}}});await s("SourceAdded",t);const o=await r.clients.LiveApi().source.addSourceToProject({collectionId:e,projectId:c.projectId,sourceId:t.sourceId});return await s("ProjectSourceAdded",{projectId:o.project.projectId,source:t}),t},D=async c=>{const e=v().id;let t=[],o={};c.metadata&&(t.push("metadata"),o.metadata=c.metadata),c.displayName&&(t.push("preview.webrtc.displayName"),o={...o,preview:{webrtc:{displayName:c.displayName}}});const{source:i}=await r.clients.LiveApi().source.updateSource({collectionId:e,updateMask:t,sourceId:c.sourceId,...o});return await s("SourceChanged",i),i},S=async c=>{const e=v().id;await r.clients.LiveApi().source.removeSourceFromProject({collectionId:e,projectId:c.projectId,sourceId:c.sourceId}),await s("ProjectSourceRemoved",{projectId:c.projectId,sourceId:c.sourceId});const t=await r.clients.LiveApi().source.deleteSource({sourceId:c.sourceId,collectionId:e});return await s("SourceRemoved",c.sourceId),t},f=async(c={})=>{const{props:e={},size:t,settings:o={},type:i}=c,n=await r.Request.createProject({settings:o,props:e,size:t,type:i});await s("ProjectAdded",n.project);const a=await g(n.project,"ROLE_HOST");return P(a)},k=async c=>{const{projectId:e,props:t={}}=c,o=v().id,i=await r.clients.LiveApi().project.getProject({collectionId:o,projectId:e,status:!0});if([w.PROJECT_BROADCAST_PHASE_RUNNING,w.PROJECT_BROADCAST_PHASE_STARTING].includes(i.status.phase))return;const n=i.project.metadata||{},{layoutId:a}=n,{video:d}=i.project.rendering,{type:p}=i.project.metadata.props||{},I=await r.Request.createLayout({collectionId:o,projectId:e,type:p||"sceneless",settings:{},size:{x:d.width,y:d.height}}),A=await r.clients.LiveApi().project.updateProject({collectionId:o,projectId:e,updateMask:["metadata"],metadata:{...n,layoutId:I.id}});r.log.debug("New layout assigned to project:",{layout:I}),await s("ProjectChanged",{project:A.project}),await r.clients.LayoutApi().layout.deleteLayout({layoutId:a}),r.log.debug("Previous layout deleted:",{layoutId:a});const u=await g(A.project,"ROLE_HOST");return await u.compositor.update(u.compositor.getRoot().id,t),{project:P(u),internalProject:u}},T=async c=>{const{projectId:e}=c;await r.Request.deleteProject({projectId:e}),await s("ProjectRemoved",{projectId:e})},B=async c=>{const{projectId:e}=c,t=v().id,o=l(e),i={...o.props,...c.props},n=await r.clients.LiveApi().project.updateProject({collectionId:t,projectId:e,updateMask:["metadata"],metadata:{...o.videoApi.project.metadata,props:i}});await s("ProjectChanged",{project:n.project})},M=async c=>{var a;const{projectId:e,videoRendering:t}=c,o=v().id,i=l(e),n=await r.clients.LiveApi().project.updateProject({collectionId:o,projectId:e,updateMask:["rendering.video"],rendering:{video:{...((a=i.videoApi.project.rendering)==null?void 0:a.video)??{},...t}}});await s("ProjectChanged",{project:n.project})},U=async c=>{const{projectId:e}=c,t=v().id,o=l(e),i={...o.props,...c.props};await r.clients.LiveApi().project.updateProject({collectionId:t,projectId:e,updateMask:["metadata"],metadata:{...o.videoApi.project.metadata,props:i}})},O=async c=>{const e=j.projects.find(o=>o.id===c.projectId);if(!e){j.activeProjectId=null,s("ActiveProjectChanged",{projectId:null});return}const t=j.projects.find(o=>o.id===j.activeProjectId);if(e!==t)return t&&(Array.from(m.rooms.keys()).map(m.removeRoom),await r.clients.LayoutApi().unsubscribeFromLayout(t.layoutApi.layoutId),await r.clients.LiveApi().unsubscribeFromProject(t.videoApi.project.collectionId,t.videoApi.project.projectId),await r.clients.LiveApi().unsubscribeFromCollection(t.videoApi.project.collectionId)),await r.clients.LayoutApi().subscribeToLayout(e.layoutApi.layoutId),await r.clients.LiveApi().subscribeToProject(e.videoApi.project.collectionId,e.videoApi.project.projectId),await r.clients.LiveApi().subscribeToCollection(e.videoApi.project.collectionId),r.clients.LiveApi().project.getProject({collectionId:e.videoApi.project.collectionId,projectId:e.videoApi.project.projectId,status:!0}).then(o=>{var i,n;s("ProjectChanged",{project:o.project,phase:(i=o.status)==null?void 0:i.phase,broadcastId:(n=o.status)==null?void 0:n.broadcastId})}),s("ActiveProjectChanged",{projectId:e.id}),P(e)},_=async c=>{const{projectId:e,displayName:t="Guest"}=c,o=j.projects.find(u=>u.id===e);let i=o.sfuToken;if(!i){let{webrtcAccess:u}=await r.clients.LiveApi().authentication.createWebRtcAccessToken({collectionId:o.videoApi.project.collectionId,projectId:o.videoApi.project.projectId,displayName:t});i=u.accessToken}const a=y(i).video.room,d=new URL(r.clients.getLiveKitServer()),p=d.host+d.pathname,I=m.ensureRoom(p,a,i);I.bindApiClient(r.clients),await I.connect(),o.sfuToken=i,o.roomId=a;const A=h(a);return L("RoomJoined",{projectId:o.id,room:A}),A},E=async c=>{let{props:e={},parentId:t,index:o,projectId:i=j.activeProjectId}=c;const n=l(i),a=await n.compositor.insert(e,t,o);return s("NodeAdded",{projectId:i,nodeId:a}),s("NodeChanged",{projectId:i,nodeId:t}),n.compositor.get(a)},x=async c=>{var n;let{nodeId:e,projectId:t=j.activeProjectId}=c;const o=l(t),i=(n=o.compositor.getParent(e))==null?void 0:n.id;o.compositor.remove(e),s("NodeRemoved",{projectId:t,nodeId:e}),s("NodeChanged",{projectId:t,nodeId:i})},F=async c=>{let{nodeId:e,props:t={},projectId:o=j.activeProjectId}=c;const i=l(o);return delete t.type,delete t.sourceType,i.compositor.update(e,t),s("NodeChanged",{projectId:o,nodeId:e}),i.compositor.get(e)},H=async c=>{let{nodeId:e,layout:t,projectId:o=j.activeProjectId,layoutProps:i={}}=c;l(o).compositor.update(e,{layout:t,layoutProps:i}),s("NodeChanged",{projectId:o,nodeId:e})},K=async c=>{const{nodeId:e,parentId:t,projectId:o=j.activeProjectId,index:i}=c;l(o).compositor.move(e,t,i),s("NodeChanged",{projectId:o,nodeId:e})},q=async c=>{var d,p;const{nodeAId:e,nodeBId:t,projectId:o=j.activeProjectId}=c,i=l(o),n=(d=i.compositor.getParent(e))==null?void 0:d.id,a=(p=i.compositor.getParent(t))==null?void 0:p.id;i.compositor.swap(e,t),s("NodeChanged",{projectId:o,nodeId:n}),s("NodeChanged",{projectId:o,nodeId:a})},G=async c=>{const{parentId:e,childIds:t,projectId:o=j.activeProjectId}=c;l(o).compositor.reorder(e,t),s("NodeChanged",{projectId:o,nodeId:e})},J=async c=>{const{projectId:e=j.activeProjectId,dynamicSources:t,props:o}=c,i=l(e);await r.clients.LiveApi().project.startProjectBroadcast({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,...t&&{dynamicSources:t},...o&&{triggerMetadata:{...o}}})},z=async c=>{const{projectId:e=j.activeProjectId}=c,t=l(e);await r.clients.LiveApi().project.stopProjectBroadcast({collectionId:t.videoApi.project.collectionId,projectId:t.videoApi.project.projectId})},W=async c=>{const{projectId:e}=c,t=l(e);return(await r.clients.LiveApi().project.getProjectBroadcastStatus({collectionId:t.videoApi.project.collectionId,projectId:t.videoApi.project.projectId})).status},V=async c=>{var I;const{rtmpUrl:e,rtmpKey:t,enabled:o,projectId:i=j.activeProjectId,props:n={}}=c,a=l(i),d={rtmpPush:{key:t,url:e}},p=await((I=r.clients.LiveApi().destination)==null?void 0:I.createDestination({collectionId:a.videoApi.project.collectionId,projectId:a.videoApi.project.projectId,address:d,enabled:o,metadata:{props:n}}));return await s("DestinationAdded",p.destination),b(p.destination)},Q=async c=>{var i;const{destinationId:e,projectId:t=j.activeProjectId}=c,o=l(t);await((i=r.clients.LiveApi().destination)==null?void 0:i.deleteDestination({collectionId:o.videoApi.project.collectionId,projectId:o.videoApi.project.projectId,destinationId:e})),await s("DestinationRemoved",{projectId:t,destinationId:e})},X=async c=>{var p;const{rtmpUrl:e,rtmpKey:t,destinationId:o,projectId:i=j.activeProjectId}=c,n=l(i),a={key:t,url:e},d=await((p=r.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:n.videoApi.project.collectionId,projectId:n.videoApi.project.projectId,destinationId:o,updateMask:["address.rtmpPush"],address:{rtmpPush:a}}));await s("DestinationChanged",d.destination)},Y=async c=>{var d,p;const{projectId:e=j.activeProjectId,destinationId:t,props:o={}}=c,i=l(e),n=i.videoApi.project.destinations.find(I=>I.destinationId===t);if(!n)return;const a=await((p=r.clients.LiveApi().destination)==null?void 0:p.updateDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,destinationId:t,updateMask:["metadata"],metadata:{...n.metadata||{},props:{...((d=n.metadata)==null?void 0:d.props)||{},...o}}}));await s("DestinationChanged",a.destination)},Z=async c=>{var d;const{enabled:e,destinationId:t,projectId:o=j.activeProjectId}=c,i=l(o);if(i.videoApi.project.destinations.find(p=>t===p.destinationId).enabled===e)return;const a=await((d=r.clients.LiveApi().destination)==null?void 0:d.updateDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,destinationId:t,updateMask:["enabled"],enabled:e}));await s("DestinationChanged",a.destination)},$=async c=>{var d,p;const{rtmpUrl:e,rtmpKey:t,projectId:o=j.activeProjectId}=c,i=l(o),n={key:t,url:e},a=!0;if(i.videoApi.project.destinations.length>0){const I=await((d=r.clients.LiveApi().destination)==null?void 0:d.updateDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,destinationId:i.videoApi.project.destinations[0].destinationId,updateMask:["address.rtmpPush"],address:{rtmpPush:n}}));await s("DestinationChanged",I.destination)}else{const I=await((p=r.clients.LiveApi().destination)==null?void 0:p.createDestination({collectionId:i.videoApi.project.collectionId,projectId:i.videoApi.project.projectId,address:{rtmpPush:n},enabled:a}));await s("DestinationAdded",I.destination)}};export{V as addDestination,E as createNode,f as createProject,R as createSource,x as deleteNode,T as deleteProject,S as deleteSource,W as getBroadcastState,_ as joinRoom,K as moveNode,k as recreateLayout,Q as removeDestination,G as reorderNodes,O as setActiveProject,$ as setDestination,Z as setDestinationEnabled,H as setNodeLayout,J as startBroadcast,z as stopBroadcast,q as swapNodes,X as updateDestination,Y as updateDestinationProps,F as updateNode,B as updateProjectProps,U as updateProjectPropsWithoutTrigger,M as updateProjectVideoRendering,D as updateSource,N as updateUserProps};
//# sourceMappingURL=commands-DIOi3KoV.js.map
