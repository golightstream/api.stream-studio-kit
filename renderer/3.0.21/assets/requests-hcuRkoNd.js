import{C as c,g as y,a as u,b as j,h as g}from"./compositor-DSjC3YKg.js";const L=[{name:"ImageIframeOverlayContainer",id:"fg-image-iframe",layout:"Free"},{name:"BannerContainer",id:"fg-banners",layout:"Column",layoutProps:{cover:!0}},{name:"AlertContainer",id:"alert",layout:"Layered",layoutProps:{type:"alert",preset:"center"}},{name:"VideoOverlayContainer",id:"fg-video",layout:"Free"},{name:"LogoContainer",layout:"Free",id:"logo"}],I=async(a,r,t)=>{const{layout:s,layoutProps:l={}}=t,e=await c.compositor.createProject({props:{name:"Root",type:"sceneless-project",sourceType:"Element",layout:"Layered",size:r,isRoot:!0,tagName:"div",version:"beta",fields:{style:{background:"black"}}}},a),o=e.getRoot(),n=await Promise.all([e.insert({name:"Background",id:"bg",layout:"Layered"},o.id),e.insert({id:"content",name:"Content",layout:s,layoutProps:l},o.id),e.insert({id:"foreground",name:"Overlays",layout:"Layered"},o.id)]);await e.reorder(o.id,n);const i=o.children.find(p=>p.props.id==="foreground"),d=L.map(p=>e.insert(p,i.id)),m=await Promise.all(d);return await e.reorder(i.id,m),e},v=async a=>{const r=y().id,t=a.type||"sceneless",s=a.size||{x:1280,y:720},l=a.settings||{};let e=await c.clients.LiveApi().project.createProject({collectionId:r,rendering:{video:{width:s.x,height:s.y,framerate:30}},composition:{studioSdk:{version:c.rendererVersion}},metadata:{},webrtc:{hosted:{}}});const o=await P({projectId:e.project.projectId,collectionId:e.project.collectionId,settings:l,size:s,type:t}),{displayName:n}=u(),i={type:t,layoutId:o.id,hostDisplayName:n,props:a.props||{}};let d=await c.clients.LiveApi().project.updateProject({collectionId:r,projectId:e.project.projectId,updateMask:["metadata"],metadata:i});return e.project=d.project,e.project.metadata=i,{project:e.project,layout:o}},C=async a=>{const{projectId:r}=a,t=j(r),s=y().id;await Promise.all([c.clients.LiveApi().project.deleteProject({collectionId:s,projectId:r}),c.clients.LayoutApi().layout.deleteLayout({layoutId:t.layoutApi.layoutId})])},b=async a=>{var o;const r=await w();let t;const{displayName:s,serviceUserId:l}=u();r.length===0?t=(await c.clients.LiveApi().collection.createCollection({metadata:{serviceUserId:l,displayName:s,props:{}}})).collection:t=r[0],await c.clients.LiveApi().subscribeToCollection(t.collectionId);const e=await Promise.all(t.projects.filter(n=>{var i;return!!((i=n.metadata)!=null&&i.layoutId)}).map(n=>g(n,"ROLE_HOST",a)));return{user:{id:t.collectionId,metadata:t.metadata,props:((o=t.metadata)==null?void 0:o.props)||{},name:s},projects:e,sources:t.sources}},w=async()=>(await c.clients.LiveApi().collection.getCollections({})).collections,P=async a=>{const{settings:r,size:t,type:s,projectId:l,collectionId:e}=a,o=await c.clients.LayoutApi().layout.createLayout({layout:{projectId:l,collectionId:e}});return s==="sceneless"?await I(o.id,t,r):await c.compositor.createProject({props:{name:"Root",layout:"Free",...r,isRoot:!0,size:t}},o.id),o};export{P as createLayout,v as createProject,C as deleteProject,w as loadCollections,b as loadUser};
//# sourceMappingURL=requests-hcuRkoNd.js.map
