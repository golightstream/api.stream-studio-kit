var u=Object.defineProperty,I=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var d=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var j=(e,t,o)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,l=(e,t)=>{for(var o in t||(t={}))w.call(t,o)&&j(e,o,t[o]);if(d)for(var o of d(t))P.call(t,o)&&j(e,o,t[o]);return e},m=(e,t)=>I(e,g(t));import{C as s,g as y,h as v}from"./compositor.3485bba2.js";const L=async(e,t,o)=>{const{backgroundImage:n,layout:c,layoutProps:a={}}=o,r=await s.compositor.createProject({props:{name:"Root",type:"sceneless-project",layout:"Layered",size:t,isRoot:!0}},e),i=r.getRoot(),p=await Promise.all([r.insert({name:"Background",id:"bg",tagName:"img",sourceType:"Element",attributes:{src:n},style:{objectFit:"cover"}},i.id),r.insert({id:"content",name:"Content",layout:c,layoutProps:a},i.id),r.insert({id:"foreground",name:"Overlays",layout:"Free"},i.id)]);return await r.reorder(i.id,p),r},h=async e=>{const{projectId:t,collectionId:o,props:n={}}=e,{project:c}=await s.clients.LiveApi().project.getProject({collectionId:o,projectId:t}),a=c.metadata,r=a.props||{},i=l(l({},r),n);s.clients.LiveApi().project.updateProject({collectionId:c.collectionId,projectId:c.projectId,updateMask:["metadata"],metadata:{layoutId:a.layoutId,props:i}})},R=async e=>{const t=e.type||"sceneless",o=e.size||{x:1280,y:720},n=e.props||{};let c=await s.clients.LiveApi().project.createProject({collectionId:e.collectionId,rendering:{video:{width:o.x,height:o.y,framerate:30}},composition:{studioSdk:{rendererUrl:s.config.compositorUrl}},metadata:{},webrtc:{hosted:{}}});const a=await s.clients.LayoutApi().layout.createLayout({layout:{projectId:c.project.projectId,collectionId:c.project.collectionId}}),{displayName:r}=y(),i=l({type:t,layoutId:a.id,hostDisplayName:r},e.meta||{});let p=await s.clients.LiveApi().project.updateProject({collectionId:e.collectionId,projectId:c.project.projectId,updateMask:["metadata"],metadata:i});return c.project=p.project,c.project.metadata=i,t==="sceneless"?await L(a.id,o,n):await s.compositor.createProject({props:m(l({name:"Root",layout:"Free"},n),{isRoot:!0,size:o})},a.id),c},f=async()=>{const e=await A();let t;const{displayName:o,serviceUserId:n}=y();e.length===0?t=(await s.clients.LiveApi().collection.createCollection({metadata:{serviceUserId:n,displayName:o}})).collection:t=e[0],await s.clients.LiveApi().subscribeToCollection(t.collectionId);const c=await Promise.all(t.projects.map(a=>v(a)));return{collectionId:t.collectionId,userProps:t.metadata||{},projects:c}},A=async()=>(await s.clients.LiveApi().collection.getCollections({})).collections;export{R as createProject,A as loadCollections,f as loadProjects,h as updateProject};
//# sourceMappingURL=requests.a5309c26.js.map
