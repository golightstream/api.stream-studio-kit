import{C as s,g as u,a as g,b as h,h as v}from"./compositor.94e3055e.js";const w=async(a,i,t)=>{const{backgroundImage:o,layout:l,layoutProps:c={}}=t,e=await s.compositor.createProject({props:{name:"Root",type:"sceneless-project",sourceType:"Element",layout:"Layered",size:i,isRoot:!0,tagName:"div",fields:{style:{background:"black"}}}},a),r=e.getRoot(),d=await Promise.all([e.insert({name:"Background",id:"bg",layout:"Free"},r.id),e.insert({id:"content",name:"Content",layout:l,layoutProps:c},r.id),e.insert({id:"foreground",name:"Overlays",layout:"Free"},r.id)]);await e.reorder(r.id,d);const n=r.children.find(y=>y.props.id==="foreground"),m=await Promise.all([e.insert({name:"ImageOverlay",id:"fg-image",layout:"Free"},n.id),e.insert({name:"Overlay",sourceType:"Overlay",id:"overlay",layout:"Free",style:{width:"100%",height:"100%",objectFit:"cover"}},n.id),e.insert({name:"BannerContainer",id:"fg-banners",layout:"Column",layoutProps:{cover:!0}},n.id),e.insert({name:"VideoOverlay",id:"fg-video",layout:"Free"},n.id),e.insert({name:"VideoOverlay2",layout:"Free",sourceType:"Video2",proxySource:"Overlay",id:"video-overlay",style:{width:"100%",height:"100%",objectFit:"cover"}},n.id),e.insert({name:"Logo",layout:"Free",sourceType:"Logo",id:"logo",style:{width:"100%",height:"100%",objectFit:"contain",position:"unset"}},n.id)]);await e.reorder(n.id,m);const p=r.children.find(y=>y.props.id==="bg"),j=await Promise.all([e.insert({name:"ImageBackground",id:"bg-image",tagName:"img",sourceType:"Element",attributes:{src:o},fields:{style:{width:"100%",height:"100%",objectFit:"cover"}}},p.id),e.insert({name:"ImageBackground2",sourceType:"Image2",proxySource:"Background",id:"image-background",layout:"Free",src:o,style:{width:"100%",height:"100%",objectFit:"cover"}},p.id),e.insert({name:"VideoBackground",sourceType:"Video2",proxySource:"Background",id:"video-background",layout:"Free",style:{width:"100%",height:"100%",objectFit:"cover"}},p.id)]);return await e.reorder(p.id,j),e},F=async a=>{const i=u().id,t=a.type||"sceneless",o=a.size||{x:1280,y:720},l=a.settings||{};let c=await s.clients.LiveApi().project.createProject({collectionId:i,rendering:{video:{width:o.x,height:o.y,framerate:30}},composition:{studioSdk:{}},metadata:{},webrtc:{hosted:{}}});const e=await s.clients.LayoutApi().layout.createLayout({layout:{projectId:c.project.projectId,collectionId:c.project.collectionId}}),{displayName:r}=g(),d={type:t,layoutId:e.id,hostDisplayName:r,props:a.props||{}};let n=await s.clients.LiveApi().project.updateProject({collectionId:i,projectId:c.project.projectId,updateMask:["metadata"],metadata:d});return c.project=n.project,c.project.metadata=d,t==="sceneless"?await w(e.id,o,l):await s.compositor.createProject({props:{name:"Root",layout:"Free",...l,isRoot:!0,size:o}},e.id),c},L=async a=>{const{projectId:i}=a,t=h(i),o=u().id;await Promise.all([s.clients.LiveApi().project.deleteProject({collectionId:o,projectId:i}),s.clients.LayoutApi().layout.deleteLayout({layoutId:t.layoutApi.layoutId})])},P=async a=>{var e;const i=await b();let t;const{displayName:o,serviceUserId:l}=g();i.length===0?t=(await s.clients.LiveApi().collection.createCollection({metadata:{serviceUserId:l,displayName:o,props:{}}})).collection:t=i[0],await s.clients.LiveApi().subscribeToCollection(t.collectionId);const c=await Promise.all(t.projects.map(r=>v(r,"ROLE_HOST",a)));return{user:{id:t.collectionId,metadata:t.metadata,props:((e=t.metadata)==null?void 0:e.props)||{},name:o},projects:c,sources:t.sources}},b=async()=>(await s.clients.LiveApi().collection.getCollections({})).collections;export{F as createProject,L as deleteProject,b as loadCollections,P as loadUser};
//# sourceMappingURL=requests.f7d8b6e1.js.map
