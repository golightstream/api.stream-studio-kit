import{C as i,g as y,a as m,b,h as v}from"./compositor.b718f8e2.js";const h=async(o,t,s)=>{const{backgroundImage:a,layout:l,layoutProps:r={}}=s,e=await i.compositor.createProject({props:{name:"Root",type:"sceneless-project",sourceType:"Element",layout:"Layered",size:t,isRoot:!0,tagName:"div",fields:{style:{background:"black"}}}},o),n=e.getRoot(),d=await Promise.all([e.insert({name:"Background",id:"bg",layout:"Free"},n.id),e.insert({id:"content",name:"Content",layout:l,layoutProps:r},n.id),e.insert({id:"foreground",name:"Overlays",layout:"Free"},n.id)]);await e.reorder(n.id,d);const c=n.children.find(u=>u.props.id==="foreground"),g=await Promise.all([e.insert({name:"ImageOverlay",id:"fg-image",layout:"Free"},c.id),e.insert({name:"ImageOverlay2",sourceType:"Image2",proxySource:"Overlay",id:"image-overlay",layout:"Free",style:{width:"100%",height:"100%",position:"absolute",objectFit:"cover"}},c.id),e.insert({name:"BannerContainer",id:"fg-banners",layout:"Column",layoutProps:{cover:!0}},c.id),e.insert({name:"VideoOverlay",id:"fg-video",layout:"Free"},c.id),e.insert({name:"VideoOverlay2",layout:"Free",sourceType:"Video2",proxySource:"Overlay",id:"video-overlay",style:{width:"100%",height:"100%",position:"absolute",objectFit:"cover"}},c.id),e.insert({name:"Logo",layout:"Free",sourceType:"Image2",proxySource:"Logo",id:"logo",style:{width:"160px",height:"90px",objectFit:"cover"}},c.id)]);await e.reorder(c.id,g);const p=n.children.find(u=>u.props.id==="bg"),j=await Promise.all([e.insert({name:"ImageBackground",id:"bg-image",tagName:"img",sourceType:"Element",attributes:{src:a}},p.id),e.insert({name:"ImageBackground",sourceType:"Image2",proxySource:"Background",id:"image-background",layout:"Free",src:a,style:{width:"100%",height:"100%",position:"absolute",objectFit:"cover"}},p.id),e.insert({name:"VideoBackground",sourceType:"Video2",proxySource:"Background",id:"video-background",layout:"Free",style:{width:"100%",height:"100%",position:"absolute",objectFit:"cover"}},p.id)]);return await e.reorder(p.id,j),e},L=async o=>{const t=y().id,s=o.type||"sceneless",a=o.size||{x:1280,y:720},l=o.settings||{};let r=await i.clients.LiveApi().project.createProject({collectionId:t,rendering:{video:{width:a.x,height:a.y,framerate:30}},composition:{studioSdk:{}},metadata:{},webrtc:{hosted:{}}});const e=await i.clients.LayoutApi().layout.createLayout({layout:{projectId:r.project.projectId,collectionId:r.project.collectionId}}),{displayName:n}=m(),d={type:s,layoutId:e.id,hostDisplayName:n,props:o.props||{}};let c=await i.clients.LiveApi().project.updateProject({collectionId:t,projectId:r.project.projectId,updateMask:["metadata"],metadata:d});return r.project=c.project,r.project.metadata=d,s==="sceneless"?await h(e.id,a,l):await i.compositor.createProject({props:{name:"Root",layout:"Free",...l,isRoot:!0,size:a}},e.id),r},P=async o=>{const{projectId:t}=o,s=b(t),a=y().id;await Promise.all([i.clients.LiveApi().project.deleteProject({collectionId:a,projectId:t}),i.clients.LayoutApi().layout.deleteLayout({layoutId:s.layoutApi.layoutId})])},k=async()=>{var r;const o=await w();let t;const{displayName:s,serviceUserId:a}=m();o.length===0?t=(await i.clients.LiveApi().collection.createCollection({metadata:{serviceUserId:a,displayName:s,props:{}}})).collection:t=o[0],await i.clients.LiveApi().subscribeToCollection(t.collectionId);const l=await Promise.all(t.projects.map(e=>v(e,"ROLE_HOST")));return{user:{id:t.collectionId,metadata:t.metadata,props:((r=t.metadata)==null?void 0:r.props)||{},name:s},projects:l,sources:t.sources}},w=async()=>(await i.clients.LiveApi().collection.getCollections({})).collections;export{L as createProject,P as deleteProject,w as loadCollections,k as loadUser};
//# sourceMappingURL=requests.0da3cbfd.js.map
