{"version":3,"file":"guest-DjQBmZ-F.js","sources":["../../../../examples/studio-kit-demo/src/guest/guest.tsx","../../../../examples/studio-kit-demo/src/guest-main.tsx"],"sourcesContent":["/* ---------------------------------------------------------------------------------------------\n * Copyright (c) Infiniscene, Inc. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * -------------------------------------------------------------------------------------------- */\nimport { useContext, useEffect, useRef, useState } from 'react'\nimport { init, Helpers, SDK } from '@api.stream/studio-kit'\nimport { ControlPanel, DeviceSelection } from '../shared/control-panel'\nimport { Participant } from '../shared/participant'\nimport Style from '../shared/shared.module.css'\nimport { Chat } from '../shared/chat'\nimport config from '../../config'\n\nconst { Room } = Helpers\nconst { useStudio } = Helpers.React\n\nconst DEFAULT_GUEST_NAME = 'Guest-' + Math.floor(Math.random() * 1e4)\n\nconst Project = () => {\n  const { studio, project, room, projectCommands } = useStudio()\n  const renderContainer = useRef()\n  const [isLive, setIsLive] = useState(false)\n\n  useEffect(() => {\n    Room.ensureDevicePermissions()\n  })\n\n  // Listen for project events\n  useEffect(() => {\n    return project.subscribe((event, payload) => {\n      if (event === 'BroadcastStarted') {\n        setIsLive(true)\n      } else if (event === 'BroadcastStopped') {\n        setIsLive(false)\n      }\n    })\n  }, [])\n\n  useEffect(()=>{\n    if(room){\n      room.sendData({type : \"UserJoined\"});\n    }\n  },[room])\n  useEffect(() => {\n    studio.render({\n      containerEl: renderContainer.current,\n      projectId: project.id,\n      dragAndDrop: false, // Disable controls for guests\n    })\n  }, [renderContainer.current])\n\n  if (!room) return null\n\n  return (\n    <div className={Style.column} style={{ marginLeft: 10 }}>\n      <div ref={renderContainer}></div>\n      {isLive && <div style={{ fontWeight: 'bold' }}>You're live!</div>}\n      <div className={Style.row}>\n        <DeviceSelection />\n        <div\n          style={{\n            marginLeft: 20,\n            marginTop: 12,\n          }}\n        >\n          <ControlPanel room={room} projectCommands={projectCommands} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const GuestView = () => {\n  const { studio, project, room, setStudio, setProject, setRoom } = useStudio()\n  const [joining, setJoining] = useState(false)\n  const [displayName, setDisplayName] = useState(DEFAULT_GUEST_NAME)\n  const [participant, setParticipant] = useState<SDK.Participant>()\n  const [error, setError] = useState<string>()\n  const [inRoom, setInRoom] = useState<boolean>(false)\n\n  // Store as a global for debugging in console\n  window.SDK = useStudio()\n\n  // Listen for room participants\n  useEffect(() => {\n    if (!room) return\n    return room.useParticipant(room.participantId, setParticipant)\n  }, [room])\n\n  // Initialize studio\n  useEffect(() => {\n    if (!joining) return\n    if (!studio) {\n      init({\n        env: config.env,\n        logLevel: config.logLevel,\n      })\n        .then(setStudio)\n        .catch((e) => {\n          console.warn(e)\n          setError(e.message)\n        })\n    }\n  }, [joining])\n\n  // Initialize project\n  useEffect(() => {\n    if (!studio) return\n\n    if (studio.initialProject) {\n      // If the SDK detects a token in the URL, it will return the project\n      //  associated with it (e.g. guest view)\n      setProject(studio.initialProject)\n    } else {\n      setError('Invalid token')\n    }\n  }, [studio])\n\n  // Initialize room\n  useEffect(() => {\n    if (!project || inRoom) return\n    setInRoom(true)\n    project\n      .joinRoom({\n        displayName,\n      })\n      .then((room) => {\n        setJoining(false)\n        setRoom(room)\n      })\n      .catch((e) => {\n        setError(e.message)\n        setInRoom(false)\n      })\n  }, [project, room])\n\n  if (error) {\n    return <div>{error}</div>\n  }\n\n  if (joining) {\n    return <div>Joining as {displayName}...</div>\n  }\n\n  if (!room) {\n    return (\n      <form\n        className={Style.column}\n        style={{ width: 316, alignItems: 'flex-end' }}\n        onSubmit={(e) => {\n          e.preventDefault()\n          setJoining(true)\n        }}\n      >\n        <div className={Style.column}>\n          <label>Display Name</label>\n          <input\n            type=\"text\"\n            autoFocus={true}\n            defaultValue={displayName}\n            onChange={(e) => {\n              setDisplayName(e.target.value)\n            }}\n          />\n        </div>\n        <DeviceSelection />\n        <button\n          style={{ marginTop: 8, width: 70 }}\n          onClick={() => {\n            setJoining(true)\n          }}\n        >\n          Join\n        </button>\n      </form>\n    )\n  }\n\n  return (\n    <div\n      className={Style.row}\n      style={{ marginTop: 14, background: '#242533', padding: 10 }}\n    >\n      <div className={Style.column}>\n        {participant && <Participant participant={participant} />}\n      </div>\n      <Project />\n      <div style={{ marginLeft: 10 }}>\n        <Chat />\n      </div>\n    </div>\n  )\n}\n","/* ---------------------------------------------------------------------------------------------\n * Copyright (c) Infiniscene, Inc. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * -------------------------------------------------------------------------------------------- */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { GuestView } from './guest/guest'\nimport { AppProvider } from './shared/context'\nimport { Helpers } from '@api.stream/studio-kit'\nimport url from '../logo.png'\nimport './index.css'\n\nconst StudioProvider = Helpers.React.StudioProvider\n\nconst Content = () => {\n  return (\n    <div>\n      <div id=\"header\">\n        <a href=\"https://api.stream/\" target=\"_blank\">\n          <img src={url} height={20} />\n        </a>\n        <h1>\n          Studio Kit\n          <span>Demo</span>\n        </h1>\n        <h3>Guest View</h3>\n      </div>\n      <AppProvider isHost={false}>\n        <StudioProvider>\n          <GuestView />\n        </StudioProvider>\n      </AppProvider>\n    </div>\n  )\n}\n\nReactDOM.render(<Content />, document.getElementById('root'))\n"],"names":["Room","Helpers","useStudio","React","DEFAULT_GUEST_NAME","Math","floor","random","Project","studio","project","room","projectCommands","renderContainer","useRef","isLive","setIsLive","useState","useEffect","ensureDevicePermissions","subscribe","event","payload","sendData","type","render","containerEl","current","projectId","id","dragAndDrop","className","Style","column","style","marginLeft","children","_jsx","ref","fontWeight","_jsxs","row","DeviceSelection","marginTop","ControlPanel","GuestView","setStudio","setProject","setRoom","joining","setJoining","displayName","setDisplayName","participant","setParticipant","error","setError","inRoom","setInRoom","window","SDK","useParticipant","participantId","init","env","config","logLevel","then","catch","e","console","warn","message","initialProject","joinRoom","width","alignItems","onSubmit","preventDefault","autoFocus","defaultValue","onChange","target","value","onClick","background","padding","Participant","Chat","StudioProvider","Content","href","src","url","height","AppProvider","isHost","ReactDOM","document","getElementById"],"mappings":"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"}